---
name: Test and Deploy Pipeline

on:
  push:
    branches:
      - 'main'
      - 'feature/pipeline'
      - 'feature/contact'
  pull_request:
    branches:
      - 'main'

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v3
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."

      - name: Setup Deno
        uses: denoland/setup-deno@61fe2df320078202e33d7d5ad347e7dcfa0e8f31
        with:
          deno-version: v1.x

#      - name: Verify formatting
#        run: deno fmt --check
#      - name: Run linter
#
#        run: deno lint
#
#      - name: Run tests
#        run: deno test -A

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v3
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."

      - name: Find and Replace - Tokenize S3 Bucket Name
        run: find **/*.yaml -type f -exec sed -i ''s/#{S3_BUCKET_NAME}#/${{ secrets.S3_BUCKET_NAME }}/g'' {} \;

      - name: Find and Replace - Tokenize S3 CodeBucket Name
        run: find **/*.yaml -type f -exec sed -i ''s/#{S3_CODEBUCKET_NAME}#/${{ secrets.S3_CODEBUCKET_NAME }}/g'' {} \;
        
      - name: Find and Replace - Tokenize AWS Hosted Zone Id
        run: find **/*.yaml -type f -exec sed -i ''s/#{AWS_HOSTED_ZONE_ID}#/${{ secrets.AWS_HOSTED_ZONE_ID }}/g'' {} \;

      - name: Zip emailsender Lambda
        run: zip emailsender src/emailsender.index.js

      - name: Configure AWS Credentials For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
          mask-aws-account-id: true

      - name: Upload Cloudformation Templates to S3 Codebucket
        run: aws s3 sync infrastructure/. s3://${{ secrets.S3_CODEBUCKET_NAME }}

      - name: AWS CloudFormation "Deploy CloudFormation Stack" Action for GitHub Actions Locally
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ secrets.AWS_STACK_NAME }}
          template: infrastructure/static-website-cloudformation.yaml
          timeout-in-minutes: 60
          no-fail-on-empty-changeset: 1
          role-arn: ${{ secrets.CLOUDFORMATION_ROLE }}

      - name: AWS CloudFormation "Deploy CloudFormation Stack" Action for GitHub Actions from S3 Bucket
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ secrets.AWS_STACK_NAME }}
          template: s3://${{ secrets.S3_CODEBUCKET_NAME }}-us-east-1/static-website-cloudformation.yaml
          timeout-in-minutes: 60
          no-fail-on-empty-changeset: 1
          role-arn: ${{ secrets.CLOUDFORMATION_ROLE }}

      - name: Upload Contents of Repository to S3 Bucket
        run: aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }}/ted --exclude "*.md" --exclude ".*" --exclude "tailwind.config.js" --exclude "test.html" --exclude "infrastructure" --exclude "src" --exclude "*.zip"
